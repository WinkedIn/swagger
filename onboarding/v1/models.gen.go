// Package winkedIn provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package winkedIn

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes = "BasicAuth.Scopes"
)

// Defines values for Gender.
const (
	Female Gender = "Female"
	Male   Gender = "Male"
	Other  Gender = "Other"
)

// CreateUsers defines model for CreateUsers.
type CreateUsers struct {
	LinkedInToken *string `json:"linkedInToken,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// Gender Gender options available for users
type Gender string

// PreferenceValue defines model for PreferenceValue.
type PreferenceValue = string

// Preferences defines model for Preferences.
type Preferences struct {
	PreferenceType  *string            `json:"preferenceType,omitempty"`
	PreferenceValue *[]PreferenceValue `json:"preferenceValue,omitempty"`
}

// UpdateUsersPersonalInfo defines model for UpdateUsersPersonalInfo.
type UpdateUsersPersonalInfo struct {
	// Dob Date of birth (YYYY-MM-DD)
	Dob *openapi_types.Date `json:"dob,omitempty"`

	// Email User's email address
	Email *openapi_types.Email `json:"email,omitempty"`

	// Gender Gender options available for users
	Gender *Gender  `json:"gender,omitempty"`
	Height *float32 `json:"height,omitempty"`

	// MobileNumber User's mobile number
	MobileNumber *string `json:"mobileNumber,omitempty"`
}

// UpdateUsersPreferences defines model for UpdateUsersPreferences.
type UpdateUsersPreferences = []Preferences

// UpdateUsersProfessionalInfo defines model for UpdateUsersProfessionalInfo.
type UpdateUsersProfessionalInfo struct {
	// BlockedCompanies List of companies the user wants to block
	BlockedCompanies *[]string `json:"blockedCompanies,omitempty"`

	// College Name of the user's college/university
	College *string `json:"college,omitempty"`

	// CompanyName Name of the user's company
	CompanyName *string `json:"companyName,omitempty"`

	// Education User's highest education level
	Education *string `json:"education,omitempty"`

	// IndustryType Industry in which the user works
	IndustryType *string `json:"industryType,omitempty"`

	// JobTitle Job title of the user
	JobTitle *string `json:"jobTitle,omitempty"`

	// Userid Unique identifier for the user
	Userid *string `json:"userid,omitempty"`
}

// UserID defines model for UserID.
type UserID = openapi_types.UUID

// UserPhotos defines model for UserPhotos.
type UserPhotos struct {
	// DefaultPhoto Filename of the photo to be set as default
	DefaultPhoto *string `json:"defaultPhoto,omitempty"`

	// Photos List of image files to be uploaded (each max 10MB)
	Photos *[]openapi_types.File `json:"photos,omitempty"`
}

// BadRequestError defines model for BadRequestError.
type BadRequestError = Error

// ForbiddenError defines model for ForbiddenError.
type ForbiddenError = Error

// InternalServerError defines model for InternalServerError.
type InternalServerError = Error

// UnauthorizedError defines model for UnauthorizedError.
type UnauthorizedError = Error

// CreateUsersJSONRequestBody defines body for CreateUsers for application/json ContentType.
type CreateUsersJSONRequestBody = CreateUsers

// UpdateUsersPersonalJSONRequestBody defines body for UpdateUsersPersonal for application/json ContentType.
type UpdateUsersPersonalJSONRequestBody = UpdateUsersPersonalInfo

// UploadUserPhotosMultipartRequestBody defines body for UploadUserPhotos for multipart/form-data ContentType.
type UploadUserPhotosMultipartRequestBody = UserPhotos

// UpdateUsersPreferencesJSONRequestBody defines body for UpdateUsersPreferences for application/json ContentType.
type UpdateUsersPreferencesJSONRequestBody = UpdateUsersPreferences

// UpdateUsersProfessionalJSONRequestBody defines body for UpdateUsersProfessional for application/json ContentType.
type UpdateUsersProfessionalJSONRequestBody = UpdateUsersProfessionalInfo
